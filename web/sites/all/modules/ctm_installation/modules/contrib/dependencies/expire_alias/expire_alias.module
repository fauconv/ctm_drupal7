<?php
/**
 * @file
 * Allows admins to define multiple domains to clear when Expire module builds a list
 * of paths to purge through various cache back-ends.
 */

/**
 * Admin form to list your domains.
 */
function expire_alias_form_expire_admin_settings_form_alter(&$form, &$form_state, $form_id) {
  $form['expire_alias_domainlist_group'] = array(
    '#type' => 'fieldset',
    '#title' => t('Domain Aliases'),
    '#description' => t('Domain aliases to purge whenever content is altered.')
  );

  $form['expire_alias_domainlist_group']['expire_alias_domainlist'] = array(
    '#type' => 'textarea',
    '#title' => t('Domain list'),
    '#default_value' => variable_get('expire_alias_domainlist', ''),
    '#cols' => 60,
    '#rows' => 5,
    '#description' => t('List domains (including protocol) one per line with no trailing slash.'),
  );

  // Prevent the Expire protocol include base url option from being selected
  if(isset($form['format']['expire_include_base_url'])) {
  $form['format']['expire_include_base_url']['#disabled'] = TRUE;
  $form['format']['expire_include_base_url']['#default_value'] = FALSE;
    $form['format']['expire_include_base_url']['#description'] = ' <em>' . t('NOTE: This option is disabled when using Expire Aliases (below).') . '</em>';
  }
  variable_set('expire_include_base_url', FALSE);
}



/**
 * Implement hook_expire_cache_alter().
 *
 * Rebuilds list of paths to expire based on the domain aliases defined.
 */
function expire_alias_expire_urls_alter(&$expire, $node = NULL, $paths) {
  global $base_url;
  $urls = array();
  $base_Length = strlen($base_url) + 1; // +1 for the last '/'
  $domainlist = variable_get('expire_alias_domainlist', '');

  // Don't do anything to the $expire array if we have no configuration.
  if ($domainlist != '') {
    // Convert our textfield string into an array of domains.
    $domains = explode("\r\n", $domainlist);

    // Add additional logic for domain module aliases.
    if (module_exists('domain')) {
      $domain_urls = array();
      // Check if clear is a node
      if (($object_type == 'node') && isset($object)) {
        // Lookup all domains for the node.
        $domains = domain_get_node_domains($object->nid);
        foreach ($domains['domain_id'] as $domain_id) {
          // Get the main domain for each domain.
          $domain = domain_lookup($domain_id);
          $domain_urls[] = rtrim($domain['path'], '/');
          // Also include any aliases for the domain.
          if (isset($domain['aliases'])) {
            $aliases = $domain['aliases'];
            foreach ($aliases as $alias) {
              if ($alias['redirect'] != 1) {
                $domain_urls[] = $domain['scheme'] . '://' . $alias['pattern'];
              }
            }
          }
        }
      }
      $domains = array_merge($domains, $domain_urls);
    }


    // We want a full URL for each expiring path, for each domain.
    foreach (array_unique($expire) as $path) {
      if($path == '<front>') $path = '';
      if(substr($path,0,4) == 'http') $path = substr($path,$base_Length);
      if(substr($path,0,1) == '/') $path = substr($path,1);
      foreach ($domains as $domain) {
        $urls[$domain . '/' . $path] = $domain . '/' . $path;
      }
    }
    $expire = $urls;
  }
}
